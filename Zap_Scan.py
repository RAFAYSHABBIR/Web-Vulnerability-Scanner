from zapv2 import ZAPv2
import time
from urllib.parse import urlparse
from bs4 import BeautifulSoup
import shutil
import os
from flask import Flask
import Scaping
#target URL for scan 
# target = 'https://www.coursera.org/'

import threading

def scanning(target):
    apikey = '5ck2b32he754s63rsq4cnpbkt2'

    zap = ZAPv2(apikey=apikey, proxies=
        {'http':'http://localhost:8080'}
    )
    zap.urlopen(target)

    # Spider Scane
    zap.spider.scan(url=target, maxchildren=5, recurse= True, subtreeonly= False, apikey=apikey)
    time.sleep(5)
    while(int(zap.spider.status())<100):
        print(f"Spider progrssing %: {zap.ascan.status()}")
        time.sleep(5)
    print("spider completed")


    #Passive scan
    # while(int(zap.pscan.records_to_scan)<1000):
        # print("Pscan records:"+zap.pscan.records_to_scan)
        # time.sleep(5)
    # print("Pscan completed")
    
    #HTML Report
    with open('templates/report.html','w') as f:
        f.write(zap.core.htmlreport(apikey=apikey))


    # Extracting domain name from URL
    domain = urlparse(target).netloc
    print(domain) # --> www.example.test

    import nmap3
    nmap = nmap3.Nmap()
    result = nmap.nmap_version_detection(domain, args="-T4 -p 1-100 -sV -vv --script vulners -o templates/reportn.html")
    print(result)
#1
    #input file
    fin = open("templates/reportn.html", "rt")
    #output file to write the result to
    fout = open("templates/reportnm.html", "wt")
    #for each line in the input file
    for line in fin:
        #read replace the string and write to output file
        fout.write(line.replace('Nmap', 'DIPR'))
        
    #close input and output files
    fin.close()
    fout.close()
#2
    fin = open("templates/reportnm.html", "rt")
    #output file to write the result to
    fout = open("templates/reportnmp.html", "wt")
    #for each line in the input file
    for line in fin:
        #read replace the string and write to output file

        fout.write(line.replace('Please report any incorrect results at https://nmap.org/submit/ ', ' '))
    #close input and output files
    fin.close()
    fout.close()
#3
    fin = open("templates/reportnmp.html", "rt")
    #output file to write the result to
    fout = open("templates/reportmp.html", "wt")
    #for each line in the input file
    for line in fin:
        #read replace the string and write to output file

        fout.write(line.replace('nmap', 'DIPR'))

    #close input and output files
    fin.close()
    fout.close()
#4
    fin = open("templates/reportmp.html", "rt")
    #output file to write the result to
    fout = open("templates/reportnmap.html", "wt")
    #for each line in the input file
    for line in fin:
        #read replace the string and write to output file

        fout.write(line.replace('-oX - -sV -T4 -p 1-100 -sV -vv --script vulners -o templates/reportn.html', 'Target :'))

    #close input and output files
    fin.close()
    fout.close()

    Scaping.scraping()
   